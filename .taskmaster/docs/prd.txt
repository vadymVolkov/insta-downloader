<context>
# Overview  
Instagram Downloader - это REST API сервис, который позволяет скачивать видео из Instagram постов и извлекать метаданные. Сервис решает проблему необходимости в простом и надежном способе получения контента из Instagram для дальнейшего использования или анализа. Целевая аудитория - разработчики, которые нуждаются в программном доступе к Instagram контенту.

# Core Features  
- **Скачивание видео**: Основная функция - получение видеофайлов из Instagram постов по URL
- **Извлечение метаданных**: Автоматическое извлечение информации о посте (автор, описание, дата публикации)
- **Сбор комментариев**: Получение списка комментариев с авторами и текстом
- **REST API**: Простой HTTP API для интеграции с другими системами
- **Статическая раздача файлов**: Возможность получения скачанных файлов через HTTP

# User Experience  
- **Пользователи**: Разработчики, которые интегрируют функционал в свои приложения
- **Основной флоу**: POST запрос с URL Instagram поста → получение JSON с метаданными и ссылкой на видео
- **Простота использования**: Минималистичный API с одним endpoint
</context>
<PRD>
# Technical Architecture  
- **Backend**: FastAPI для создания REST API
- **Парсинг**: instaloader или аналогичная библиотека для работы с Instagram
- **Валидация**: Pydantic схемы для валидации входящих и исходящих данных
- **Файловая система**: Локальное хранение видеофайлов в директории media/
- **Статические файлы**: FastAPI StaticFiles для раздачи скачанных файлов
- **Структура проекта**: Разделение на routers/, services/, schemas/ для чистой архитектуры

# Development Roadmap  
**Phase 1 - MVP (Минимально жизнеспособный продукт)**:
- Базовая структура FastAPI приложения
- Один endpoint POST /api/download/
- Интеграция с instaloader для скачивания видео
- Извлечение базовых метаданных (автор, описание, дата)
- Сохранение файлов с уникальными именами
- Возврат JSON с метаданными и ссылкой на файл

**Phase 2 - Расширенная функциональность**:
- Добавление извлечения комментариев
- Улучшенная обработка ошибок
- Валидация URL Instagram
- Логирование операций

**Phase 3 - Оптимизация и надежность**:
- Добавление тестов
- Улучшение производительности
- Обработка различных типов Instagram контента
- Документация API

# Logical Dependency Chain
1. **Основа**: Создание базовой структуры FastAPI приложения
2. **Интеграция**: Подключение instaloader и настройка парсинга
3. **API**: Реализация основного endpoint'а
4. **Файловая система**: Настройка сохранения и раздачи файлов
5. **Метаданные**: Извлечение и структурирование информации о посте
6. **Комментарии**: Добавление функционала сбора комментариев
7. **Тестирование**: Покрытие тестами и валидация

# Risks and Mitigations  
- **Технические вызовы**: Instagram может изменить API - используем проверенные библиотеки
- **Ограничения Instagram**: Возможны rate limits - добавляем обработку ошибок
- **Файловое хранилище**: Ограничения по размеру - реализуем очистку старых файлов
- **Безопасность**: Валидация URL для предотвращения атак

# Appendix  
- Используемые технологии: FastAPI, instaloader, Pydantic, Uvicorn
- Формат ответа: JSON с полями author, description, created_at, video_url, comments
- Структура комментариев: массив объектов {user, text}
- Статические файлы доступны по http://localhost/static/<filename>
</PRD>
